name: Bump Version

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  check-token:
    runs-on: ubuntu-latest
    outputs:
      GH_PUSH_TOKEN: ${{ steps.check.outputs.GH_PUSH_TOKEN }}
    steps:
      - name: Check GH_PUSH_TOKEN
        id: check
        run: |
          if [[ -z "${{ secrets.GH_PUSH_TOKEN }}" ]]; then
            echo "GH_PUSH_TOKEN is not set. Exiting."
            exit 1
          fi
          echo "::set-output name=GH_PUSH_TOKEN::${{ secrets.GH_PUSH_TOKEN }}"
        shell: bash

  check-merged:
    needs: check-token
    runs-on: ubuntu-latest
    outputs:
      merged: ${{ steps.check.outputs.merged }}
    steps:
      - name: Check if PR is merged
        id: check
        run: |
          if [[ "${{ github.event.pull_request.merged }}" != "true" ]]; then
            echo "Pull request is not merged. Exiting."
            exit 1
          fi
          echo "::set-output name=merged::${{ github.event.pull_request.merged }}"
        shell: bash

  get-labels:
    needs: check-merged
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get.outputs.version }}
    steps:
      - name: Get labels
        id: get
        run: |
          LABELS=$(jq -r '.pull_request.labels[].name' <<< '${{ toJson(github.event) }}')
          VERSION_LABELS=$(echo "$LABELS" | grep -E '^version-(patch|minor|major)$' || true)
          if [[ $(echo "$VERSION_LABELS" | wc -l) -ne 1 ]]; then
            echo "Exactly one version label is required. Exiting."
            exit 1
          fi
          echo "::set-output name=version::$(echo "$VERSION_LABELS" | sed 's/^version-//')"
        shell: bash

  bump-and-push-version:
    needs: [check-token, get-labels]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Bump Version
        id: bump
        run: |
          npm version ${{ needs.get-labels.outputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git commit -am "Bump version to $VERSION"
          echo "::set-output name=version::$VERSION"
        shell: bash

      - name: Push changes
        run: |
          git push origin main
          git push origin --tags
        env:
          GH_PUSH_TOKEN: ${{ needs.check-token.outputs.GH_PUSH_TOKEN }}
        shell: bash

  create-release:
    needs: [get-labels, bump-and-push-version]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.get-labels.outputs.version }}
          name: ${{ needs.get-labels.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
