on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  bump-version:
    runs-on: ubuntu-latest

    env:
      GH_PUSH_TOKEN: ${{ secrets.GH_PUSH_TOKEN }}

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        if: env.GH_PUSH_TOKEN != ''
        with:
          token: ${{ env.GH_PUSH_TOKEN }}

      - name: configure git
        if: env.GH_PUSH_TOKEN != ''
        run: |
          git remote set-url origin https://itsalaidbacklife@github.com/cuttle-cards/cuttle
          git config --global user.name "Cuttle Continuous Integration"
          git config --global user.email "itsalaidbacklife@gmail.com"

      # Bump version
      - name: bump patch version
        id: bump_patch
        run: |
          if contains(github.event.pull_request.labels.*.name, 'version-patch') && env.GH_PUSH_TOKEN != ''
          then
            npm run version:patch
            echo "::set-output name=bumped::true"
          fi
        shell: bash

      - name: bump minor version
        id: bump_minor
        run: |
          if contains(github.event.pull_request.labels.*.name, 'version-minor') && env.GH_PUSH_TOKEN != ''
          then
            npm run version:minor
            echo "::set-output name=bumped::true"
          fi
        shell: bash

      - name: bump major version
        id: bump_major
        run: |
          if contains(github.event.pull_request.labels.*.name, 'version-major') && env.GH_PUSH_TOKEN != ''
          then
            npm run version:major
            echo "::set-output name=bumped::true"
          fi
        shell: bash

      - name: Get version
        id: package
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"
        shell: bash

      # Push changes to main if a version bump occurred
      - name: Push changes
        run: git push origin main
        if: steps.bump_patch.outputs.bumped == 'true' || steps.bump_minor.outputs.bumped == 'true' || steps.bump_major.outputs.bumped == 'true'
        shell: bash

      # Create a new GitHub release if a version bump occurred
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: steps.bump_patch.outputs.bumped == 'true' || steps.bump_minor.outputs.bumped == 'true' || steps.bump_major.outputs.bumped == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ steps.package.outputs.version }}
          draft: false
          prerelease: false
          tag_name: ${{ steps.package.outputs.version }}
